{
  "permissions": {
    "allow": [
      "Bash(grep:*)",
      "Bash(python3:*)",
      "Bash(sed:*)",
      "Bash(rg:*)",
      "Bash(find:*)",
      "Bash(ls:*)",
      "Bash(claude mcp list:*)",
      "Bash(/mnt/c/Users/steve/Code/zen-mcp-server/.zen_venv/bin/python -c \"import sys; print(sys.version)\" 2>&1)",
      "Bash(apt-get:*)",
      "Bash(apt-get install:*)",
      "Bash(pip3 install:*)",
      "Bash(apt:*)",
      "Bash(apt upgrade:*)",
      "Bash(do-release-upgrade:*)",
      "Bash(sudo apt-get:*)",
      "Bash(sudo apt-get install:*)",
      "Bash(kill:*)",
      "Bash(cat:*)",
      "Bash(pkill:*)",
      "Bash(timeout:*)",
      "Bash(chmod:*)",
      "Bash(gst-launch-1.0:*)",
      "Bash(ffprobe:*)",
      "Bash(ffmpeg:*)",
      "Bash(# Record for 10 seconds\ntimeout 10s python3 publish.py --room testroom123999999999 --record-room --password false --noaudio --debug 2>&1 | grep -E \"(RECORDING START|Output file|Video data flowing)\" &\nRECORD_PID=$!\n\n# Wait for recording to complete\nsleep 12\n\n# Get the latest recording\nLATEST_RECORDING=$(ls -t testroom123999999999_*.webm 2>/dev/null | head -1)\n\necho \"Latest recording: $LATEST_RECORDING\"\n\n# Test playback with GStreamer\necho \"Testing with GStreamer...\"\ntimeout 3s gst-launch-1.0 filesrc location=\"$LATEST_RECORDING\" ! decodebin ! fakesink 2>&1 | grep -E \"(Setting pipeline|EOS|ERROR)\"\n\n# Test with ffmpeg\necho -e \"\\nTesting with ffmpeg...\"\nffprobe -v error -show_entries format=duration,bit_rate -show_entries stream=codec_name,width,height \"$LATEST_RECORDING\" 2>&1\n\n# Check file size\necho -e \"\\nFile size:\"\nls -lh \"$LATEST_RECORDING\")",
      "Bash(rm:*)",
      "WebFetch(domain:raw.githubusercontent.com)",
      "mcp__zen__chat",
      "Bash(ffplay:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "Bash(git pull:*)",
      "Bash(git reset:*)",
      "Bash(git stash:*)",
      "Bash(diff:*)",
      "Bash(git fetch:*)",
      "Bash(docker build:*)",
      "Bash(docker run:*)"
    ],
    "deny": []
  },
  "enableAllProjectMcpServers": false
}